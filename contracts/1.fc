#include "imports/stdlib.fc";

global cell res;
global int hash_d;

() recv_internal() {
}

() dfs(cell tree) impure {
    if (hash_d == cell_hash(tree)){
        return tree;
    } else {
        if (~slice_empty?(tree.begin_parse())){
            cell left = tree.begin_parse()~load_ref();
            return dfs(left);
            if (~slice_empty?(tree)){
                return dfs(tree.load_ref());
            }
        }
    }
}

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
    res = begin_cell().end_cell();
    hash_d = hash;
    dfs(tree);
    return res;
}