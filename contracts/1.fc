#include "imports/stdlib.fc";

global cell res;
global int hash_d;

() recv_internal() {
}

() dfs(cell tree) impure {
    if (hash_d == cell_hash(tree)){
        res = tree;
    } else {
        if (slice_refs(tree.begin_parse())){
            var ds = tree.begin_parse();
            cell left = ds~load_ref();
            dfs(left);
            if (slice_refs(ds)){
                dfs(ds~load_ref());
            }
        }
    }
}

(cell) find_branch_by_hash(int hash, cell tree) method_id {
    res = begin_cell().end_cell();
    hash_d = hash;
    dfs(tree);
    return res;
}
