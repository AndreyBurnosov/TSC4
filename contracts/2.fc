{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

forall X -> int is_null (X x) asm "ISNULL";
forall X -> (tuple, ()) push_back (tuple tail, X head) asm "CONS";
forall X -> (tuple, (X)) pop_back (tuple t) asm "UNCONS";

int tuple_length (tuple t) asm "TLEN";

() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {

  tuple res = empty_tuple();
  int n1 = tuple_length(matrixA);
  int m1 = tuple_length(matrixB);
  int n2 = m1;
  int m2 = tuple_length(matrixB.at(0));
  int i = 0;

  repeat(n1) {
    int j = 0;
    tuple tmp = empty_tuple();
    repeat(m2){
      int k = 0;
      int x = 0;
      repeat(m1){
        x += matrixA.at(i).at(k) * matrixB.at(k).at(j);
        k += 1;
      }
      tmp~tpush(x);
      j += 1;
    }
    res~tpush(tmp);
    i += 1;
  }

  return res;
}

